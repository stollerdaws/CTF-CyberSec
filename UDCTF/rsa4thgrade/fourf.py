from Crypto.Util.number import inverse, long_to_bytes

def find_phi(e, d, n):
    k = (e * d - 1) // n
    while True:
        phi = (e * d - 1) // k
        if k * phi == e * d - 1:
            return phi
        k += 1

# Replace these values with the output from the program
your_e = 548861
your_d = 95173232432571941329231712692828118443780574466702093807146321250099677631827067825710345421542241500117509827717221625523077656554170307232963298108032249257829668442277402436905496971410095631707035128294281318370127935482352287840967522858886054571972660826718745245567014905338023490270530223206547055189
n = 128923276994737790032784225847154420815473322545569053376748335367791339027988282369445542202224938698537424444443434684524386629219697192340629226569242894844874718895350330788650992608621499779776079293063355076268941953990983854217613662005027668855183281795022629934463967333582234624036115283306256019477
e_CEO = 65537
ct = 101925091511033045433108849975441961999589763870098425244810307722908781911184299892072334641669931066841662878745617845011689451171244453969963211155840837507751273716371760271643490363012983256424608885239953158409708266675819028960222627654995967984657602529298637614235721996131897162063485544360691578861  # Replace with the intercepted ciphertext

# Find phi(n)
phi = find_phi(your_e, your_d, n)

# Find the private key of the CEO
d_CEO = inverse(e_CEO, phi)

# Decrypt the ciphertext
pt = pow(ct, d_CEO, n)

# Convert the plaintext from a number back to bytes
msg = long_to_bytes(pt)

# Print the decrypted message
print(msg)
