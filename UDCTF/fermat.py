from Crypto.Util.number import long_to_bytes
def fermat_factorization(n):
    a = pow(n, 1, 2) + 1  # This is equivalent to taking the integer square root of n
    b_sq = a * a - n
    b = pow(b_sq, 1, 2)  # This is equivalent to taking the integer square root of b_sq
    while b * b != b_sq:
        a += 1
        b_sq = a * a - n
        b = pow(b_sq, 1, 2)
    p = a + b
    q = a - b
    return p, q

def rsa_decrypt(ct, p, q, e):
    n = p * q
    phi = (p - 1) * (q - 1)
    d = pow(e, -1, phi)
    pt = pow(ct, d, n)
    return pt.to_bytes((pt.bit_length() + 7) // 8, 'big')

def main():
    N = 17740803753336460891508014077951088945415214329359164945595622460861617151883658129377771074141448545977293824812472806768754107334272113784618671425945265453677763300584120796664192793654787317526905676618168560287204392207536711238413377822113265783504873957094131330620182217422910507867161033695120195691266283498385072573721376398480018719760538723050237163598524153522595496137288270407836138586188296538117138982579560625325815068701431157466298638302885600982291990551448117534677697122276691651611734934147801954625280213769902451417946572231015611006746186167211313556716518863585799128114202130873384852581
    e = 65537
    ct = 7617664236008252568996899627946125782926068188323112773389474654757630578865481085502759186904920518615173703165984894164411436709177950136929724052191922739861682189280802963747906815275683543148623167088950096943169566195634558711652670745197446307315888349532981492405588457559228674864147994684328968321710022127803384848143475788457274558988285904875669797926919759123645348144531804252200718312650929926931919262408975771593313266992606751663814830129337536342634243623652919127335934704778878412649409415730419077839365246227059700689395639431013008985996793686430486195007712091309878718060405038405039494286
    print(long_to_bytes(588488806442961130449056760878392703721660512894481252971064376803074429))
    p, q = fermat_factorization(N)
    print("p:", p)
    print("q:", q)

    plaintext = rsa_decrypt(ct, p, q, e)
    print("Plaintext:", plaintext)

if __name__ == "__main__":
    main()
