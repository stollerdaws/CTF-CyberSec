#!/usr/bin/env python3

from Crypto.Util.number import bytes_to_long
from Crypto.PublicKey import RSA
from sage.all import matrix, Zmod



n = 23036769723266886125458649758956702648712087220176816714653838673509877792118247880199359383510351312176460013557289096284919848198450380140055143077150138568183361851259869327791757963071569189728166204980100709764185330342160274626199317196467443629331873914435565361740711829939685538189329988893139409587357168398853766369829738504476214206419533085521724453948450717252383742145150063213519788568096297255648618658652421978414668802766216274568505191139490500068196963713850595634438745810451971497700218653640156817206666005050648173171079623763116133293956506581891112418298346805489471936353543559531981211007

pt = b'REDACTED'

pt = [bytes_to_long(pt[p:p+len(pt)//4]) for p in range(0, len(pt), len(pt)//4)]

g = matrix(Zmod(n), [[pt[0], pt[1]], [pt[2], pt[3]]])

print(g)
def encrypt(g):
    return g ^ 65537


c = encrypt(g)

for i in c:
    for j in i:
        print(j)
